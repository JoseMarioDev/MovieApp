version:
  2.1

  # create executor, underlying environment to run job
  executors:
    app-executor:
      docker:
      - image: circleci/node:13.12.0
      working_directory: ~/repo
  # create aliases; reusable variables to use in jobs
  aliases:
    - &show-current-branch-name
      run:
        name: Show current branch
        command: echo ${CIRCLE_BRANCH}
    - &restore-cache
      restore_cache:
        keys:
          - app-{{checksum "package.json"}}
          - app-
    - &install-dependencies
      run:
        name: Install dependencies
        command: npm install
    - &save-cache
      save_cache:
        paths:
          - node_modules
        key: app-{{checksum "package.json"}}
    - &install-aws-cli
      run:
        name: Installing AWS CLI
        working_directory: /
        command: |
          sudo apt-get -y -qq update
          sudo apt-get install -y awscli
          sudo apt-get install -y python-pip python-dev build-essential
    - &build-project
      run:
        name: Build Project
        command: |
          npm install
          npm run build
          cd build
          zip ../build.zip -r * .[^.]*
          echo "Build Successful!"


  # create job named "build"; create docker image
  # show current branch
  # check to see if package.json is in cache
  # install deps
  # add package.json and node modules to cache
jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache      
      - *install-dependencies
      - *save_cache
  # job to install aws cli, run build, deploy to s3 bucket
  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS S3
          command: |
            if ["${CIRCLE_BRANCH}" == "master"]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
            elif ["${CIRCLE_BRANCH}" == "staging"]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else 
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_DEV} --delete
            fi
  # job to deploy to cloudfront
  deploy-to-aws-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS Cloudfront
          command: |
            aws configure set preview.cloudfront true
            if ["${CIRCLE_BRANCH}" == "master"]
            then
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
            elif ["${CIRCLE_BRANCH}" == "staging"]
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
            else 
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
            fi
# order of how jobs will be executed and dependencies
workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - development
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - development
                - staging
                - master
